/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>



#define DEFAULT 0
#define SYMBOL  1
#define NAV_NUM 2 
#define ADJUST  3

#define RGB_DEF RGB_COLOR_HSB(202,100,100)
#define RGB_RED RGB_COLOR_HSB(128,100,100)
#define RGB_GRN RGB_COLOR_HSB(0,100,100)


&led_strip {
    chain-length = <6>; //Underglow only
    // chain-length = <31>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <25>; // Uncomment if using only per-key LEDs.
};

&left_encoder {
    resolution = <4>;
};
&right_encoder {
    resolution = <4>;
};
/ {

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    behaviors {
        rgb_encoder_hue: rgb_encoder_hue {
            compatible = "zmk,behavior-sensor-rotate";
            label = "RGB_ENCODER_HUE";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_HUI>, <&rgb_ug RGB_HUD>;
        };

        rgb_encoder_brt: rgb_encoder_brt {
            compatible = "zmk,behavior-sensor-rotate";
            label = "RGB_ENCODER_BRT";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
        };
    };

    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&left_encoder &right_encoder>;
        triggers-per-rotation = <20>;
    };

    macros {
        /**
        * Temporarily switches to a layer (`&mo`) and change underglow.
        *
        * Params:
        *  1. Layer to switch to
        *  2. color
        *
        * Example:
        *  `&lm NUM_LAYER RGB_COLOR_HSB(128,100,100)`
        */
        lm: lm {
            label = "LAYER_MOD";
            compatible = "zmk,behavior-macro-one-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <1>;
            bindings
                = <&macro_param_1to1>
                , <&macro_press &mo MACRO_PLACEHOLDER>
                , <&macro_param_2to1>
                , <&macro_tap &rgb_ug MACRO_PLACEHOLDER>
                , <&macro_pause_for_release>
                , <&macro_param_1to1>
                , <&macro_release &mo MACRO_PLACEHOLDER>
                , <&macro_tap &rgb_ug RGB_DEF>
                ;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
            &gresc          &kp Q       &kp W       &kp E       &kp R              &kp T                                                                      &kp Y                &kp U                 &kp I       &kp O       &kp P       &kp LBRC
            &kp TAB         &kp A       &kp S       &kp D       &kp F              &kp G                                                                      &kp H                &kp J                 &kp K       &kp L       &kp SEMI    &kp SINGLE_QUOTE
            &kp LSHFT       &kp Z       &kp X       &kp C       &kp V              &kp B               &kp K_COPY &kp LCTRL           &kp RCTRL   &none       &kp N                &kp M                 &kp COMMA   &kp DOT     &kp SLASH   &kp RSHFT
                                                    &kp K_COPY  &lm SYMBOL RGB_GRN &lm NAV_NUM RGB_RED &kp SPACE  &kp RET             &kp BSPC    &kp SPACE   &lm NAV_NUM RGB_RED  &lm SYMBOL RGB_GRN    &kp K_PASTE
            >;
            sensor-bindings = <&inc_dec_kp RIGHT LEFT &inc_dec_kp DOWN UP>;
        };
    

        symbol_layer {
            bindings = <
            &trans          &none       &kp UNDER     &kp LBKT      &kp RBKT      &kp CARET                                                                  &kp EXCL    &kp LT      &kp GT    &kp EQUAL &kp AMPS  &kp RA(E)
            &trans          &kp BSLH    &kp SLASH     &kp LBRC      &kp RBRC      &kp STAR                                                                   &kp QMARK   &kp LPAR    &kp RPAR  &kp MINUS &kp COLON &kp AT_SIGN
            &trans          &kp HASH    &kp DOLLAR    &kp PIPE      &kp TILDE     &kp GRAVE          &trans      &trans              &trans      &trans      &kp PLUS    &kp PERCENT &kp DQT   &kp SQT   &kp SEMI  &none
                                                      &trans        &trans         &trans             &trans      &trans              &trans      &trans      &trans      &trans      &trans
            >;
            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &rgb_encoder_hue>;
        };

        nav_num_layer {
            bindings = <
            &trans          &kp PG_UP    &kp BSPC      &kp UP      &kp DEL     &kp PG_DN                                                          &none       &kp N7    &kp N8    &kp N9 &kp PLUS  &kp MINUS
            &trans          &kp HOME     &kp LEFT      &kp DOWN    &kp RIGHT   &kp END                                                            &none       &kp N4    &kp N5    &kp N6 &kp COMMA &kp DOT
            &trans          &kp TAB      &kp INS       &kp RET     &trans      &trans      &trans      &trans              &trans      &trans     &none       &kp N1    &kp N2    &kp N3 &kp STAR  &kp SLASH
                                                       &trans      &trans      &trans      &trans      &trans              &trans      &trans     &trans      &trans    &trans
            >;
            sensor-bindings = <&inc_dec_kp PAGE_UP PAGE_DOWN &inc_dec_kp HOME END>;    
        };

        adjust_layer {
            bindings = <
            &trans          &trans      &trans      &trans      &trans      &trans                                                           &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR
            &trans          &trans      &trans      &trans      &trans      &trans                                                           &rgb_ug RGB_BRI &rgb_ug RGB_EFF &rgb_ug RGB_TOG &none    &none     &none
            &trans          &trans      &trans      &trans      &trans      &trans     &trans      &trans              &trans      &trans    &rgb_ug RGB_BRD &none           &none       &none      &none     &none
                                                    &trans      &trans      &trans     &trans      &trans              &trans      &trans    &trans          &trans          &trans
            >;
            sensor-bindings = <&rgb_encoder_brt &rgb_encoder_hue>;    
        };


    };
};
